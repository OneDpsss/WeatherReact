{"ast":null,"code":"var _jsxFileName = \"/Users/valerashavlaygin/IdeaProjects/WeatherReact/src/context/WeatherContext.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from 'react';\nimport useWeather from '../hooks/useWeather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const WeatherContext = /*#__PURE__*/createContext();\nexport function WeatherProvider({\n  children\n}) {\n  _s();\n  const [unit, setUnit] = useState('metric');\n  const [selectedDay, setSelectedDay] = useState(null);\n  const {\n    latestWeatherData,\n    error,\n    fetchWeather\n  } = useWeather(unit);\n  return /*#__PURE__*/_jsxDEV(WeatherContext.Provider, {\n    value: {\n      unit,\n      setUnit,\n      latestWeatherData,\n      error,\n      fetchWeather,\n      selectedDay,\n      setSelectedDay\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }, this);\n}\n_s(WeatherProvider, \"8ExFFcuLKm6p0DO9yPcVIqK6PJM=\", false, function () {\n  return [useWeather];\n});\n_c = WeatherProvider;\nvar _c;\n$RefreshReg$(_c, \"WeatherProvider\");","map":{"version":3,"names":["createContext","useState","useWeather","jsxDEV","_jsxDEV","WeatherContext","WeatherProvider","children","_s","unit","setUnit","selectedDay","setSelectedDay","latestWeatherData","error","fetchWeather","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/valerashavlaygin/IdeaProjects/WeatherReact/src/context/WeatherContext.jsx"],"sourcesContent":["import { createContext, useState } from 'react';\nimport useWeather from '../hooks/useWeather';\n\nexport const WeatherContext = createContext();\n\nexport function WeatherProvider({ children }) {\n    const [unit, setUnit] = useState('metric');\n    const [selectedDay, setSelectedDay] = useState(null);\n    const { latestWeatherData, error, fetchWeather } = useWeather(unit);\n\n    return (\n        <WeatherContext.Provider\n            value={{\n                unit,\n                setUnit,\n                latestWeatherData,\n                error,\n                fetchWeather,\n                selectedDay,\n                setSelectedDay,\n            }}\n        >\n            {children}\n        </WeatherContext.Provider>\n    );\n}"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,OAAO,MAAMC,cAAc,gBAAGL,aAAa,CAAC,CAAC;AAE7C,OAAO,SAASM,eAAeA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,QAAQ,CAAC;EAC1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM;IAAEY,iBAAiB;IAAEC,KAAK;IAAEC;EAAa,CAAC,GAAGb,UAAU,CAACO,IAAI,CAAC;EAEnE,oBACIL,OAAA,CAACC,cAAc,CAACW,QAAQ;IACpBC,KAAK,EAAE;MACHR,IAAI;MACJC,OAAO;MACPG,iBAAiB;MACjBC,KAAK;MACLC,YAAY;MACZJ,WAAW;MACXC;IACJ,CAAE;IAAAL,QAAA,EAEDA;EAAQ;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAElC;AAACb,EAAA,CApBeF,eAAe;EAAA,QAGwBJ,UAAU;AAAA;AAAAoB,EAAA,GAHjDhB,eAAe;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}