{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst API_KEY = '81ac6854a1b748926ad19292fd753dab';\nfunction useWeather(unit) {\n  _s();\n  const [latestWeatherData, setLatestWeatherData] = useState(null);\n  const [error, setError] = useState(null);\n  const fetchWeather = async city => {\n    if (!city) {\n      setError('Пожалуйста, введите название города');\n      return;\n    }\n    try {\n      setError(null);\n      setLatestWeatherData(null);\n      const currentResponse = await axios.get(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${unit}`);\n      const forecastResponse = await axios.get(`https://api.openweathermap.org/data/2.5/forecast?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&appid=${API_KEY}&units=${unit}`);\n      setLatestWeatherData({\n        current: currentResponse.data,\n        forecast: forecastResponse.data\n      });\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 404) {\n        setError('Город не найден. Попробуйте другое место.');\n      } else {\n        setError('Не удалось получить данные о погоде. Попробуйте позже.');\n      }\n    }\n  };\n  useEffect(() => {\n    fetchWeather('Moscow');\n  }, [unit]);\n  return {\n    latestWeatherData,\n    error,\n    fetchWeather\n  };\n}\n_s(useWeather, \"uCaJU1edVxkd7aEblePKyYmYk5g=\");\nexport default useWeather;","map":{"version":3,"names":["useState","useEffect","axios","API_KEY","useWeather","unit","_s","latestWeatherData","setLatestWeatherData","error","setError","fetchWeather","city","currentResponse","get","forecastResponse","data","coord","lat","lon","current","forecast","err","_err$response","response","status"],"sources":["/Users/valerashavlaygin/IdeaProjects/WeatherReact/src/hooks/useWeather.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst API_KEY = '81ac6854a1b748926ad19292fd753dab';\n\nfunction useWeather(unit) {\n    const [latestWeatherData, setLatestWeatherData] = useState(null);\n    const [error, setError] = useState(null);\n\n    const fetchWeather = async (city) => {\n        if (!city) {\n            setError('Пожалуйста, введите название города');\n            return;\n        }\n\n        try {\n            setError(null);\n            setLatestWeatherData(null);\n\n            const currentResponse = await axios.get(\n                `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${API_KEY}&units=${unit}`\n            );\n\n            const forecastResponse = await axios.get(\n                `https://api.openweathermap.org/data/2.5/forecast?lat=${currentResponse.data.coord.lat}&lon=${currentResponse.data.coord.lon}&appid=${API_KEY}&units=${unit}`\n            );\n\n            setLatestWeatherData({\n                current: currentResponse.data,\n                forecast: forecastResponse.data,\n            });\n        } catch (err) {\n            if (err.response?.status === 404) {\n                setError('Город не найден. Попробуйте другое место.');\n            } else {\n                setError('Не удалось получить данные о погоде. Попробуйте позже.');\n            }\n        }\n    };\n\n    useEffect(() => {\n        fetchWeather('Moscow');\n    }, [unit]);\n\n    return { latestWeatherData, error, fetchWeather };\n}\n\nexport default useWeather;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,kCAAkC;AAElD,SAASC,UAAUA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMW,YAAY,GAAG,MAAOC,IAAI,IAAK;IACjC,IAAI,CAACA,IAAI,EAAE;MACPF,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACJ;IAEA,IAAI;MACAA,QAAQ,CAAC,IAAI,CAAC;MACdF,oBAAoB,CAAC,IAAI,CAAC;MAE1B,MAAMK,eAAe,GAAG,MAAMX,KAAK,CAACY,GAAG,CACnC,qDAAqDF,IAAI,UAAUT,OAAO,UAAUE,IAAI,EAC5F,CAAC;MAED,MAAMU,gBAAgB,GAAG,MAAMb,KAAK,CAACY,GAAG,CACpC,wDAAwDD,eAAe,CAACG,IAAI,CAACC,KAAK,CAACC,GAAG,QAAQL,eAAe,CAACG,IAAI,CAACC,KAAK,CAACE,GAAG,UAAUhB,OAAO,UAAUE,IAAI,EAC/J,CAAC;MAEDG,oBAAoB,CAAC;QACjBY,OAAO,EAAEP,eAAe,CAACG,IAAI;QAC7BK,QAAQ,EAAEN,gBAAgB,CAACC;MAC/B,CAAC,CAAC;IACN,CAAC,CAAC,OAAOM,GAAG,EAAE;MAAA,IAAAC,aAAA;MACV,IAAI,EAAAA,aAAA,GAAAD,GAAG,CAACE,QAAQ,cAAAD,aAAA,uBAAZA,aAAA,CAAcE,MAAM,MAAK,GAAG,EAAE;QAC9Bf,QAAQ,CAAC,2CAA2C,CAAC;MACzD,CAAC,MAAM;QACHA,QAAQ,CAAC,wDAAwD,CAAC;MACtE;IACJ;EACJ,CAAC;EAEDT,SAAS,CAAC,MAAM;IACZU,YAAY,CAAC,QAAQ,CAAC;EAC1B,CAAC,EAAE,CAACN,IAAI,CAAC,CAAC;EAEV,OAAO;IAAEE,iBAAiB;IAAEE,KAAK;IAAEE;EAAa,CAAC;AACrD;AAACL,EAAA,CAxCQF,UAAU;AA0CnB,eAAeA,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}