{"ast":null,"code":"var _jsxFileName = \"/Users/valerashavlaygin/IdeaProjects/WeatherReact/src/components/Forecast.jsx\",\n  _s = $RefreshSig$();\nimport { useContext } from 'react';\nimport { WeatherContext } from '../context/WeatherContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Forecast() {\n  _s();\n  const {\n    latestWeatherData,\n    unit,\n    setSelectedDay\n  } = useContext(WeatherContext);\n  if (!(latestWeatherData !== null && latestWeatherData !== void 0 && latestWeatherData.forecast)) return null;\n  const dailyForecasts = latestWeatherData.forecast.list.filter(item => item.dt_txt.includes('12:00:00')).slice(0, 5);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forecast\",\n    children: dailyForecasts.map(day => {\n      const date = new Date(day.dt * 1000).toLocaleDateString('en-US', {\n        weekday: 'short'\n      });\n      const temp = Math.round(day.main.temp);\n      const unitSymbol = unit === 'metric' ? '째C' : '째F';\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast-day\",\n        onClick: () => setSelectedDay(day),\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://openweathermap.org/img/wn/${day.weather[0].icon}.png`,\n          alt: day.weather[0].description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [temp, unitSymbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this)]\n      }, day.dt, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Forecast, \"DL3TGu+cIRtndFbg2reTnKhc69w=\");\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["useContext","WeatherContext","jsxDEV","_jsxDEV","Forecast","_s","latestWeatherData","unit","setSelectedDay","forecast","dailyForecasts","list","filter","item","dt_txt","includes","slice","className","children","map","day","date","Date","dt","toLocaleDateString","weekday","temp","Math","round","main","unitSymbol","onClick","fileName","_jsxFileName","lineNumber","columnNumber","src","weather","icon","alt","description","_c","$RefreshReg$"],"sources":["/Users/valerashavlaygin/IdeaProjects/WeatherReact/src/components/Forecast.jsx"],"sourcesContent":["import { useContext } from 'react';\nimport { WeatherContext } from '../context/WeatherContext';\n\nfunction Forecast() {\n    const { latestWeatherData, unit, setSelectedDay } = useContext(WeatherContext);\n\n    if (!latestWeatherData?.forecast) return null;\n\n    const dailyForecasts = latestWeatherData.forecast.list\n        .filter((item) => item.dt_txt.includes('12:00:00'))\n        .slice(0, 5);\n\n    return (\n        <div className=\"forecast\">\n            {dailyForecasts.map((day) => {\n                const date = new Date(day.dt * 1000).toLocaleDateString('en-US', {\n                    weekday: 'short',\n                });\n                const temp = Math.round(day.main.temp);\n                const unitSymbol = unit === 'metric' ? '째C' : '째F';\n\n                return (\n                    <div\n                        key={day.dt}\n                        className=\"forecast-day\"\n                        onClick={() => setSelectedDay(day)}\n                    >\n                        <p>{date}</p>\n                        <img\n                            src={`http://openweathermap.org/img/wn/${day.weather[0].icon}.png`}\n                            alt={day.weather[0].description}\n                        />\n                        <p>{temp}{unitSymbol}</p>\n                    </div>\n                );\n            })}\n        </div>\n    );\n}\n\nexport default Forecast;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,SAASC,cAAc,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM;IAAEC,iBAAiB;IAAEC,IAAI;IAAEC;EAAe,CAAC,GAAGR,UAAU,CAACC,cAAc,CAAC;EAE9E,IAAI,EAACK,iBAAiB,aAAjBA,iBAAiB,eAAjBA,iBAAiB,CAAEG,QAAQ,GAAE,OAAO,IAAI;EAE7C,MAAMC,cAAc,GAAGJ,iBAAiB,CAACG,QAAQ,CAACE,IAAI,CACjDC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,MAAM,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAClDC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;EAEhB,oBACIb,OAAA;IAAKc,SAAS,EAAC,UAAU;IAAAC,QAAA,EACpBR,cAAc,CAACS,GAAG,CAAEC,GAAG,IAAK;MACzB,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,GAAG,CAACG,EAAE,GAAG,IAAI,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QAC7DC,OAAO,EAAE;MACb,CAAC,CAAC;MACF,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACR,GAAG,CAACS,IAAI,CAACH,IAAI,CAAC;MACtC,MAAMI,UAAU,GAAGvB,IAAI,KAAK,QAAQ,GAAG,IAAI,GAAG,IAAI;MAElD,oBACIJ,OAAA;QAEIc,SAAS,EAAC,cAAc;QACxBc,OAAO,EAAEA,CAAA,KAAMvB,cAAc,CAACY,GAAG,CAAE;QAAAF,QAAA,gBAEnCf,OAAA;UAAAe,QAAA,EAAIG;QAAI;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACbhC,OAAA;UACIiC,GAAG,EAAE,oCAAoChB,GAAG,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,MAAO;UACnEC,GAAG,EAAEnB,GAAG,CAACiB,OAAO,CAAC,CAAC,CAAC,CAACG;QAAY;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnC,CAAC,eACFhC,OAAA;UAAAe,QAAA,GAAIQ,IAAI,EAAEI,UAAU;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GATpBf,GAAG,CAACG,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CAAC;IAEd,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAAC9B,EAAA,CAnCQD,QAAQ;AAAAqC,EAAA,GAARrC,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}